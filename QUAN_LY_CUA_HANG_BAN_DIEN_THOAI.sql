CREATE DATABASE QUAN_LY_CUA_HANG_BAN_DIEN_THOAI_LTW
USE QUAN_LY_CUA_HANG_BAN_DIEN_THOAI_LTW
DROP DATABASE QUAN_LY_CUA_HANG_BAN_DIEN_THOAI_LTW
-- Bảng Sản phẩm



CREATE TABLE NHACUNGCAP(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	MANCC VARCHAR(10) NOT NULL,
	TENNCC NVARCHAR(MAX),
	DIACHI NVARCHAR(MAX),
	SODIENTHOAI VARCHAR(15)
);
ALTER TABLE NHACUNGCAP ADD CONSTRAINT UNI_PK_NHACUNGCAP UNIQUE(MANCC), 
						   CONSTRAINT CK_SODIENTHOAI CHECK (SODIENTHOAI LIKE '[0-9]%' AND LEN(SODIENTHOAI) <= 15);


CREATE TABLE KHO (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    MAKHO VARCHAR(10) NOT NULL UNIQUE,
    TENKHO NVARCHAR(MAX),
    DIACHIKHO NVARCHAR(MAX),
    SODIENTHOAIKHO VARCHAR(15)
);
ALTER TABLE KHO 
	ADD CONSTRAINT CK_SODIENTHOAIKHO CHECK (SODIENTHOAIKHO LIKE '[0-9]%' AND LEN(SODIENTHOAIKHO) <= 15);


CREATE TABLE LOAISANPHAM(
	ID INT  IDENTITY(1,1) PRIMARY KEY NOT NULL,
	MALOAI VARCHAR(50) NOT NULL,
	TENLOAI NVARCHAR(MAX),
);

ALTER TABLE LOAISANPHAM 
	ADD CONSTRAINT UNI_PK_MALOAI UNIQUE(MALOAI);

CREATE TABLE CHITIETSANPHAM (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    MACHITIETSANPHAM VARCHAR(10) NOT NULL UNIQUE,
    MALOAI VARCHAR(50) NOT NULL,
    TENSANPHAM NVARCHAR(MAX),
    GIA FLOAT,
    MAUSAC NVARCHAR(MAX),
    MOTASANPHAM NVARCHAR(MAX),
    HINHANH VARCHAR(MAX),
	MANCC VARCHAR(10),
	CONSTRAINT FK_NHACUNGCAP_CHITIETSANPHAM FOREIGN KEY (MANCC) REFERENCES NHACUNGCAP(MANCC)
);
ALTER TABLE CHITIETSANPHAM 
	ADD CONSTRAINT FK_LOAISANPHAM_CHITIETSANPHAM FOREIGN KEY (MALOAI) REFERENCES LOAISANPHAM(MALOAI);

CREATE TABLE KHO_CHITIETSANPHAM (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    MAKHO VARCHAR(10) NOT NULL,
    MACHITIETSANPHAM VARCHAR(10) NOT NULL,
	SOLUONG INT,
    CONSTRAINT FK_KHO_CHITIETSANPHAM_KHO FOREIGN KEY (MAKHO) REFERENCES KHO(MAKHO),
    CONSTRAINT FK_KHO_CHITIETSANPHAM_CHITIETSANPHAM FOREIGN KEY (MACHITIETSANPHAM) REFERENCES CHITIETSANPHAM(MACHITIETSANPHAM)
);

select * from CHITIETSANPHAM


CREATE TABLE PERSON(
	ID INT IDENTITY(1, 1) PRIMARY KEY,
	MAPERSON VARCHAR(10) NOT NULL,
	TEN NVARCHAR(MAX),
	SODIENTHOAI VARCHAR(15),
	EMAIL VARCHAR(MAX),
	DIACHI NVARCHAR(MAX),
	GIOITINH VARCHAR(10),
);

ALTER TABLE PERSON
	ADD CONSTRAINT UNI_PK_PERSON UNIQUE(MAPERSON),
		CONSTRAINT CK_SODIENTHOAIPERSON CHECK (SODIENTHOAI LIKE '[0-9]%' AND LEN(SODIENTHOAI) <= 15);


CREATE TABLE DONMUA(
	ID INT IDENTITY(1, 1) PRIMARY KEY,
	MADONMUA VARCHAR(10) UNIQUE,
	MAKHACHHANG VARCHAR(10),
	NGAYDATHANG DATETIME,
	TRANGTHAI NVARCHAR(20),
	HINHTHUC BIT, -- 1: Tại cửa hàng; 0: Đặt hàng onlline
);


CREATE TABLE KHACHHANG(
	ID INT IDENTITY(1, 1) PRIMARY KEY,
	MAKHACHHANG VARCHAR(10) NOT NULL,
	MAPERSON VARCHAR(10),
);

ALTER TABLE KHACHHANG
	ADD CONSTRAINT UNI_PK_KHACHHANG UNIQUE(MAKHACHHANG),
		CONSTRAINT FK_PEROSON_KHACHHANG FOREIGN KEY (MAPERSON) REFERENCES PERSON(MAPERSON);

ALTER TABLE DONMUA
	ADD CONSTRAINT UNI_PK_DONMUA UNIQUE(MADONMUA, MAKHACHHANG),
		CONSTRAINT FK_KHACHHANG_DONMUA FOREIGN KEY (MAKHACHHANG) REFERENCES KHACHHANG(MAKHACHHANG);

	
CREATE TABLE TAIKHOANKHACHHANG(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	TENTAIKHOAN VARCHAR(MAX),
	MATKHAU VARCHAR(255),
	MAKHACHHANG VARCHAR(10),
);
ALTER TABLE TAIKHOANKHACHHANG
	ADD CONSTRAINT FK_KHACHHANG_TAIKHOANNHANVIEN FOREIGN KEY (MAKHACHHANG) REFERENCES KHACHHANG(MAKHACHHANG);


CREATE TABLE NHANVIEN(
	ID INT IDENTITY(1, 1) PRIMARY KEY,
	MANHANVIEN VARCHAR(10) NOT NULL,
	MAPERSON VARCHAR(10),
	CHUCVU NVARCHAR(25),
);

ALTER TABLE NHANVIEN
	ADD CONSTRAINT UNI_PK_NHANVIEN UNIQUE(MANHANVIEN),
		CONSTRAINT FK_PEROSON_NHANVIEN FOREIGN KEY (MAPERSON) REFERENCES PERSON(MAPERSON);

CREATE TABLE TAIKHOANNHANVIEN(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	TENTAIKHOAN VARCHAR(MAX),
	MATKHAU VARCHAR(255),
	MANHANVIEN VARCHAR(10),
);
ALTER TABLE TAIKHOANNHANVIEN
	ADD CONSTRAINT FK_NHANVIEN_TAIKHOANNHANVIEN FOREIGN KEY (MANHANVIEN) REFERENCES NHANVIEN(MANHANVIEN);

CREATE TABLE CHITIETDONMUA(
	ID INT IDENTITY(1, 1) PRIMARY KEY,
	MACHITIETDONMUA VARCHAR(10) NOT NULL,
	MADONMUA VARCHAR(10),
	MACHITIETSANPHAM VARCHAR(10),
	SOLUONG INT,
	KIEMTRATHANHTOAN BIT,
);

ALTER TABLE CHITIETDONMUA
	ADD CONSTRAINT UNI_PK_CHITIETDONMUA UNIQUE(MACHITIETDONMUA, MADONMUA, MACHITIETSANPHAM),
		CONSTRAINT FK_CHITIETSANPHAM_CHITIETDONMUA FOREIGN KEY (MACHITIETSANPHAM) REFERENCES CHITIETSANPHAM(MACHITIETSANPHAM),
		CONSTRAINT FK_DONMUA_CHITIETDONMUA FOREIGN KEY (MADONMUA) REFERENCES DONMUA(MADONMUA),
		CONSTRAINT CK_SOLUONG_CTDH CHECK (SOLUONG > 0)
		
CREATE TABLE THANHTOANDONMUA(
	ID INT IDENTITY(1, 1) PRIMARY KEY,
	MATHANHTOANDONMUA VARCHAR(10) NOT NULL,
	MADONMUA VARCHAR(10),
	NGAYTHANHTOAN DATETIME,
	TONGTIEN FLOAT,
);

ALTER TABLE THANHTOANDONMUA
	ADD CONSTRAINT UNI_PK_THANHTOANDONMUA UNIQUE(MATHANHTOANDONMUA),
		CONSTRAINT FK_DONMUA_THANHTOANDONMUA FOREIGN KEY (MADONMUA) REFERENCES DONMUA(MADONMUA);
		

CREATE TABLE DANHGIA (
	ID INT IDENTITY(1, 1) PRIMARY KEY,
    MADANHGIA VARCHAR(10) NOT NULL,
    MACHITIETSANPHAM VARCHAR(10),
    MAKHACHHANG VARCHAR(10),
    DIEMDANHGIA FLOAT,
    BINHLUAN NVARCHAR(MAX)
);

ALTER TABLE DANHGIA
	ADD CONSTRAINT UNI_PK_DANHGIA UNIQUE(MADANHGIA),
		CONSTRAINT FK_CHITIETSANPHAM_DANHGIA FOREIGN KEY (MACHITIETSANPHAM) REFERENCES CHITIETSANPHAM(MACHITIETSANPHAM),
		CONSTRAINT FK_KHACHHANG_DANHGIA FOREIGN KEY (MAKHACHHANG) REFERENCES KHACHHANG (MAKHACHHANG);


CREATE TABLE GIOHANG(
	ID INT IDENTITY(1, 1) PRIMARY KEY,
	MAGIOHANG VARCHAR(10) NOT NULL,
	MAKHACHHANG VARCHAR(10),
	MACHITIETSANPHAM VARCHAR(10),
	SOLUONG INT,
	THANHTIEN FLOAT
);

ALTER TABLE GIOHANG
	ADD CONSTRAINT UNI_PK_GIOHANG UNIQUE(MAGIOHANG),
		CONSTRAINT FK_KHACHHANG_GIOHANG FOREIGN KEY (MAKHACHHANG) REFERENCES KHACHHANG(MAKHACHHANG),
		CONSTRAINT FK_CHITIETSANPHAM_GIOHANG FOREIGN KEY (MACHITIETSANPHAM) REFERENCES CHITIETSANPHAM(MACHITIETSANPHAM);

CREATE TABLE QUANGCAO(
	ID INT IDENTITY(1, 1) PRIMARY KEY,
	MAQUANGCAO VARCHAR(10) NOT NULL,
	TENQUANGCAO NVARCHAR(MAX),
	HINHANH VARCHAR(MAX),

);

ALTER TABLE QUANGCAO
	ADD CONSTRAINT UNI_PK_QUANGCAO UNIQUE(MAQUANGCAO);

CREATE TABLE VITRICUAHANG(
	ID INT IDENTITY(1, 1) PRIMARY KEY,
	MAVITRICUAHANG VARCHAR(10) UNIQUE,
	TENVITRICUAHANG NVARCHAR(MAX),
	DIACHICUAHANG NVARCHAR(MAX),
);

ALTER TABLE VITRICUAHANG
	ADD CONSTRAINT UNI_PK_VITRICUAHANG UNIQUE(MAVITRICUAHANG);

	-- Dữ liệu cho bảng NHACUNGCAP
INSERT INTO LOAISANPHAM(MALOAI, TENLOAI) VALUES
('L01', N'Iphone'),
('L02', N'Samsung'),
('L03', N'Xiaomi'),
('L04', N'Oppo');

INSERT INTO NHACUNGCAP(MANCC, TENNCC, DIACHI, SODIENTHOAI) VALUES
('NCC001', 'SamSung', N'Bitexco Tower, Số 2 Hải Triều, Phường Bến Nghé, Quận 1, Thành Phố Hồ Chí Minh', '02435682529'),
('NCC002', 'Iphone', N'02 Công Xã Paris, Quận 1, Thành Phố Hồ Chí Minh', '02435682529'),
('NCC003', 'Xiaomi', N'02 Công Xã Paris, Quận 1, Thành Phố Hồ Chí Minh', '02435682529'),
('NCC004', 'LG', N'Tòa tháp đôi LG, 20 Yeouido-dong, Yeongdeungpo-gu, Seoul 150-721, Hàn Quốc', '0237771114'),
('NCC005', 'Realme', N'Tầng 6, Tòa Nhà Sao Mai Building, 19 Lê Văn Lương, Phường Nhân Chính, Quận Thanh Xuân, Hà Nội', '02473001876');
--==============================================================================================================================================
--Điện Thoại (L01)	
--iphone
INSERT INTO CHITIETSANPHAM (MACHITIETSANPHAM, MALOAI, TENSANPHAM, GIA, MAUSAC, MOTASANPHAM, HINHANH)
VALUES 
  ('SPDT001', 'L01', N'iPhone 13 Pro Max', 33990000, N'Silver', N'Màn hình Super Retina XDR, hệ thống camera Pro', 'iphone_13_pro_max.jpg'),
  ('SPDT002', 'L01', N'iPhone 13 Pro', 29990000, N'Graphite', N'Màn hình Super Retina XDR, hệ thống camera Pro', 'iphone-13-pro.jpg'),
  ('SPDT003', 'L01', N'iPhone 13', 24990000, N'Midnight', N'Màn hình Super Retina XDR, hiệu suất mạnh mẽ', 'iphone_13.jpg'),
  ('SPDT004', 'L01', N'iPhone 12 Pro Max', 32990000, N'Pacific Blue', N'Màn hình Super Retina XDR, hệ thống camera Pro', 'iphone_12_pro_max.jpg'),
  ('SPDT005', 'L01', N'iPhone 12 Pro', 28990000, N'Gold', N'Màn hình Super Retina XDR, hệ thống camera Pro', 'iphone_12_pro.jpg'),
  ('SPDT006', 'L01', N'iPhone 12', 23990000, N'Black', N'Màn hình Super Retina XDR, hiệu suất mạnh mẽ', 'iphone_12.jpg'),
  ('SPDT007', 'L01', N'iPhone SE (2nd generation)', 10990000, N'White', N'Màn hình Retina, chip A13 Bionic', 'iphone_se_2nd_gen.jpg'),
  ('SPDT008', 'L01', N'iPhone 11 Pro Max', 31990000, N'Midnight Green', N'Màn hình Super Retina XDR, hệ thống camera Pro', 'iphone_11_pro_max.jpg'),
  ('SPDT009', 'L01', N'iPhone 11 Pro', 27990000, N'Space Gray', N'Màn hình Super Retina XDR, hệ thống camera Pro', 'iphone_11_pro.jpg'),
  ('SPDT010', 'L01', N'iPhone 11', 23990000, N'Purple', N'Màn hình Liquid Retina, hiệu suất mạnh mẽ', 'iphone_11.jpg');  	
--==============================================================================================================================================
--samsung
INSERT INTO CHITIETSANPHAM (MACHITIETSANPHAM, MALOAI, TENSANPHAM, GIA, MAUSAC, MOTASANPHAM, HINHANH)
VALUES 
  ('SPDT011', 'L02', N'Samsung Galaxy S21 Ultra', 32990000, N'Phantom Black', N'Màn hình Dynamic AMOLED, hệ thống camera chất lượng cao', 'samsung_s21_ultra.jpg'),
  ('SPDT012', 'L02', N'Samsung Galaxy S21 Plus', 27990000, N'Phantom Silver', N'Màn hình Dynamic AMOLED, hiệu suất mạnh mẽ', 'samsung_s21_plus.jpg'),
  ('SPDT013', 'L02', N'Samsung Galaxy S21', 23990000, N'Phantom Gray', N'Màn hình Dynamic AMOLED, hiệu suất mạnh mẽ', 'samsung_s21.jpg'),
  ('SPDT014', 'L02', N'Samsung Galaxy Note 20 Ultra', 28990000, N'Mystic Black', N'Màn hình Dynamic AMOLED, bút S Pen', 'samsung_note_20_ultra.jpg'),
  ('SPDT015', 'L02', N'Samsung Galaxy Note 20', 24990000, N'Mystic Bronze', N'Màn hình Dynamic AMOLED, bút S Pen', 'samsung_note_20.jpg'),
  ('SPDT016', 'L02', N'Samsung Galaxy A52', 8490000, N'Awesome Black', N'Màn hình Super AMOLED, camera đa chế độ', 'samsung_a52.jpg'),
  ('SPDT017', 'L02', N'Samsung Galaxy A72', 10490000, N'Awesome White', N'Màn hình Super AMOLED, camera đa chế độ', 'samsung_a72.jpg'),
  ('SPDT018', 'L02', N'Samsung Galaxy Z Fold 2', 44990000, N'Mystic Bronze', N'Màn hình AMOLED gập, thiết kế độc đáo', 'samsung_z_fold_2.jpg'),
  ('SPDT019', 'L02', N'Samsung Galaxy Z Flip 3', 21490000, N'Phantom Black', N'Màn hình AMOLED gập, thiết kế gọn nhẹ', 'samsung_z_flip_3.jpg'),
  ('SPDT020', 'L02', N'Samsung Galaxy M32', 6490000, N'Black', N'Màn hình Super AMOLED, pin lớn', 'samsung_m32.jpg');
--==============================================================================================================================================
--xiaomi
INSERT INTO CHITIETSANPHAM (MACHITIETSANPHAM, MALOAI, TENSANPHAM, GIA, MAUSAC, MOTASANPHAM, HINHANH)
VALUES 
  ('SPDT021', 'L03', N'Xiaomi Mi 11 Ultra', 28990000, N'Cosmic Black', N'Màn hình AMOLED, camera ảo phong cách', 'xiaomi_mi_11_ultra.jpg'),
  ('SPDT022', 'L03', N'Xiaomi Mi 11 Pro', 24990000, N'Midnight Gray', N'Màn hình AMOLED, hiệu suất mạnh mẽ', 'xiaomi_mi_11_pro.jpg'),
  ('SPDT023', 'L03', N'Xiaomi Mi 11', 21990000, N'Ocean Blue', N'Màn hình AMOLED, hiệu suất mạnh mẽ', 'xiaomi_mi_11.jpg'),
  ('SPDT024', 'L03', N'Xiaomi Redmi Note 10 Pro', 6990000, N'Glacial Blue', N'Màn hình AMOLED, camera chất lượng cao', 'xiaomi_note_10_pro.jpg'),
  ('SPDT025', 'L03', N'Xiaomi Redmi Note 10', 4990000, N'Onyx Gray', N'Màn hình AMOLED, hiệu suất đáng kinh ngạc', 'xiaomi_note_10.jpg'),
  ('SPDT026', 'L03', N'Xiaomi Poco X3 Pro', 5990000, N'Phantom Black', N'Màn hình IPS, chip Snapdragon 860', 'xiaomi_poco_x3_pro.jpg'),
  ('SPDT027', 'L03', N'Xiaomi Mi 10T Pro', 13990000, N'Aurora Blue', N'Màn hình IPS, camera chất lượng cao', 'xiaomi_mi_10t_pro.jpg'),
  ('SPDT028', 'L03', N'Xiaomi Mi 10T Lite', 7490000, N'Rose Gold Beach', N'Màn hình IPS, hiệu suất mạnh mẽ', 'xiaomi_mi_10t_lite.jpg'),
  ('SPDT029', 'L03', N'Xiaomi Black Shark 4 Pro', 15990000, N'Phantom Black', N'Màn hình AMOLED, chip Snapdragon 888', 'xiaomi_black_shark_4_pro.jpg'),
  ('SPDT030', 'L03', N'Xiaomi Redmi 9C', 2990000, N'Electric Blue', N'Màn hình IPS, pin lớn', 'xiaomi_redmi_9c.jpg');
--==============================================================================================================================================
--oppo
INSERT INTO CHITIETSANPHAM (MACHITIETSANPHAM, MALOAI, TENSANPHAM, GIA, MAUSAC, MOTASANPHAM, HINHANH)
VALUES 
  ('SPDT031', 'L04', N'Oppo Find X3 Pro', 29990000, N'Gloss Black', N'Màn hình AMOLED, hệ thống camera chất lượng cao', 'oppo_find_x3_pro.jpg'),
  ('SPDT032', 'L04', N'Oppo Reno6 Pro', 17990000, N'Aurora Blue', N'Màn hình AMOLED, camera chống rung', 'oppo_reno6_pro.jpg'),
  ('SPDT033', 'L04', N'Oppo A74', 6990000, N'Matte Black', N'Màn hình AMOLED, pin lớn', 'oppo_a74.jpg'),
  ('SPDT034', 'L04', N'Oppo A16', 3590000, N'Crystal Black', N'Màn hình LCD, camera chất lượng cao', 'oppo_a16.jpg'),
  ('SPDT035', 'L04', N'Oppo F19 Pro', 10990000, N'Space Silver', N'Màn hình AMOLED, sạc nhanh 50W', 'oppo_f19_pro.jpg'),
  ('SPDT036', 'L04', N'Oppo A93', 8990000, N'Magic Blue', N'Màn hình AMOLED, camera chất lượng cao', 'oppo_a93.jpg'),
  ('SPDT037', 'L04', N'Oppo Reno5', 12990000, N'Star Silver', N'Màn hình AMOLED, hệ thống camera chống rung', 'oppo_reno5.jpg'),
  ('SPDT038', 'L04', N'Oppo A15', 4490000, N'Mystery Blue', N'Màn hình LCD, pin lớn', 'oppo_a15.jpg'),
  ('SPDT039', 'L04', N'Oppo F17 Pro', 9990000, N'Matte Black', N'Màn hình AMOLED, camera chống rung', 'oppo_f17_pro.jpg'),
  ('SPDT040', 'L04', N'Oppo A53', 5290000, N'Fancy Blue', N'Màn hình LCD, pin lớn', 'oppo_a53.jpg');
-- Chèn dữ liệu vào bảng KHO từ bảng CHITIETSANPHAM
INSERT INTO KHO (MAKHO, TENKHO, DIACHIKHO, SODIENTHOAIKHO)
VALUES
    ('KHO001', 'Kho Hàng A', '123 Đường ABC, Quận XYZ', '0123456789'),
    ('KHO002', 'Kho Hàng B', '456 Đường XYZ, Quận ABC', '0987654321'),
	('KHO003', 'Kho Hàng C', '789 Đường XYZ, Quận MNO', '0123456789'),
    ('KHO004', 'Kho Hàng D', '101 Đường PQR, Quận STU', '0987654321');

INSERT INTO KHO_CHITIETSANPHAM (MAKHO, MACHITIETSANPHAM)
VALUES
	-- Iphone
    ('KHO001', 'SPDT001'),
    ('KHO001', 'SPDT002'),
    ('KHO001', 'SPDT003'),
    ('KHO002', 'SPDT004'),
    ('KHO002', 'SPDT005'),
    ('KHO002', 'SPDT006'),
    ('KHO002', 'SPDT007'),
    ('KHO002', 'SPDT008'),
    ('KHO002', 'SPDT009'),
    ('KHO002', 'SPDT010'),
    -- Xiaomi
    ('KHO003', 'SPDT021'),
    ('KHO003', 'SPDT022'),
    ('KHO003', 'SPDT023'),
    ('KHO003', 'SPDT024'),
    ('KHO003', 'SPDT025'),
    ('KHO003', 'SPDT026'),
    ('KHO003', 'SPDT027'),
    ('KHO003', 'SPDT028'),
    ('KHO003', 'SPDT029'),
    ('KHO003', 'SPDT030'),
    -- Samsung
    ('KHO004', 'SPDT011'),
    ('KHO004', 'SPDT012'),
    ('KHO004', 'SPDT013'),
    ('KHO004', 'SPDT014'),
    ('KHO004', 'SPDT015'),
    ('KHO004', 'SPDT016'),
    ('KHO004', 'SPDT017'),
    ('KHO004', 'SPDT018'),
    ('KHO004', 'SPDT019'),
    ('KHO004', 'SPDT020'),
    -- Oppo
    ('KHO003', 'SPDT031'),
    ('KHO003', 'SPDT032'),
    ('KHO003', 'SPDT033'),
    ('KHO003', 'SPDT034'),
    ('KHO003', 'SPDT035'),
    ('KHO003', 'SPDT036'),
    ('KHO003', 'SPDT037'),
    ('KHO003', 'SPDT038'),
    ('KHO003', 'SPDT039'),
    ('KHO003', 'SPDT040');
--==============================================================================================================================================
--==============================================================================================================================================


-- Dữ liệu cho bảng PERSON
INSERT INTO PERSON (MAPERSON, TEN, SODIENTHOAI, EMAIL, DIACHI, GIOITINH) VALUES
('PER001', N'Võ Nhựt Hào', '0388533247', 'vonhuthao11235@gmail.com', N'Bình Dương 1', 'Nam'),
('PER002', N'Hồ Phí Vĩnh', '987654321', 'phivinhaz12@gmail.com', N'Đắk Nông 2', 'Nam'),
('PER003', N'Trần Trọng Vương', '555111222', 'vuongtran975@gmail.com', N'Bình Phước', 'Nam'),
('PER004', N'Nguyễn Lê Bá Thành', '999888777', 'nlbthanh@gmail.com', N'Bình Phước', N'Nam'),
('PER005', N'Đinh Lê Thảo Quỳnh', '111222333', 'nguoi5@gmail.com', N'Cà Mau', N'Nữ'),
('PER006', N'Lê Thị Bé Ba', '123456789', 'vnh180903@gmail.com', N'Hải Dương', N'Nữ'),
('PER007', N'Tư Văn Tứ', '987654321', 'vonhuthao112345@gmail.com', N'TP. HCM', N'Nam'),
('PER008', N'Vũ Văn Năm', '555111222', 'vonhuthao11236@gmail.com', N'Long An', N'Nam'),
('PER009', N'Lưu Thị Sáu', '999888777', 'vonhuthao180903@gmail.com', N'Tiền Giang', N'Nữ'),
('PER010', N'Hồ Thị Bảy', '111222333', 'vonhuthao18092003@gmail.com', N'Hà Nội', N'Nữ');

-- Dữ liệu cho bảng KHACHHANG
INSERT INTO KHACHHANG (MAKHACHHANG, MAPERSON) VALUES
('KH001', 'PER001'),
('KH002', 'PER002'),
('KH003', 'PER003'),
('KH004', 'PER004'),
('KH005', 'PER005'),
('KH005', 'PER005'),
('KH007', 'PER007'),
('KH008', 'PER008'),
('KH009', 'PER009'),
('KH010', 'PER010');
-- Dữ liệu cho bảng DONMUA

INSERT INTO DONMUA (MADONMUA, MAKHACHHANG, NGAYDATHANG, TRANGTHAI, HINHTHUC)
VALUES
  ('DM001', 'KH001', '2023-01-01', N'Đã thanh toán', 1),
  ('DM002', 'KH002', '2023-01-02', N'Đã thanh toán', 1),
  ('DM003', 'KH003', '2023-01-03', N'Đã thanh toán', 1),
  ('DM004', 'KH004', '2023-01-04', N'Đã thanh toán', 1),
  ('DM005', 'KH005', '2023-01-05', N'Đã thanh toán', 1),
  ('DM006', 'KH006', '2023-01-06', N'Đã thanh toán', 1),
  ('DM007', 'KH007', '2023-01-07', N'Đã thanh toán', 1),
  ('DM008', 'KH008', '2023-01-08', N'Đã thanh toán', 1),
  ('DM009', 'KH009', '2023-01-09', N'Đã thanh toán', 1),
  ('DM010', 'KH010', '2023-01-10', N'Đã thanh toán', 1);
INSERT INTO CHITIETDONMUA (MACHITIETDONMUA, MADONMUA, MACHITIETSANPHAM, SOLUONG, KIEMTRATHANHTOAN) VALUES
  ('CTDM001','DM001', 'SPDT001', 2, 1)
  INSERT INTO CHITIETDONMUA (MACHITIETDONMUA, MADONMUA, MACHITIETSANPHAM, SOLUONG, KIEMTRATHANHTOAN) VALUES
  ('CTDM002','DM002', 'SPDT002', 1, 1)
  INSERT INTO CHITIETDONMUA (MACHITIETDONMUA, MADONMUA, MACHITIETSANPHAM, SOLUONG, KIEMTRATHANHTOAN) VALUES
  ('CTDM003','DM003', 'SPDT003', 3, 1)
  INSERT INTO CHITIETDONMUA (MACHITIETDONMUA, MADONMUA, MACHITIETSANPHAM, SOLUONG, KIEMTRATHANHTOAN) VALUES
  ('CTDM004','DM004', 'SPDT004', 2, 1)
  INSERT INTO CHITIETDONMUA (MACHITIETDONMUA, MADONMUA, MACHITIETSANPHAM, SOLUONG, KIEMTRATHANHTOAN) VALUES
  ('CTDM005','DM005', 'SPDT005', 1, 1)
  INSERT INTO CHITIETDONMUA (MACHITIETDONMUA, MADONMUA, MACHITIETSANPHAM, SOLUONG, KIEMTRATHANHTOAN) VALUES
  ('CTDM006','DM006', 'SPDT006', 2, 1)
  INSERT INTO CHITIETDONMUA (MACHITIETDONMUA, MADONMUA, MACHITIETSANPHAM, SOLUONG, KIEMTRATHANHTOAN) VALUES
  ('CTDM007','DM007', 'SPDT007', 3, 1)
  INSERT INTO CHITIETDONMUA (MACHITIETDONMUA, MADONMUA, MACHITIETSANPHAM, SOLUONG, KIEMTRATHANHTOAN) VALUES
  ('CTDM008','DM008', 'SPDT008', 1, 1)
  INSERT INTO CHITIETDONMUA (MACHITIETDONMUA, MADONMUA, MACHITIETSANPHAM, SOLUONG, KIEMTRATHANHTOAN) VALUES
  ('CTDM009','DM009', 'SPDT009', 2, 1)
  INSERT INTO CHITIETDONMUA (MACHITIETDONMUA, MADONMUA, MACHITIETSANPHAM, SOLUONG, KIEMTRATHANHTOAN) VALUES
  ('CTDM010','DM010', 'SPDT010', 1, 1)
  
INSERT INTO THANHTOANDONMUA (MATHANHTOANDONMUA, MADONMUA, NGAYTHANHTOAN, TONGTIEN)
VALUES
  ('TTDM001','DM001', '2023-01-01 12:00:00', 0),
  ('TTDM002','DM002', '2023-01-02 12:00:00', 0),
  ('TTDM003','DM003', '2023-01-03 12:00:00', 0),
  ('TTDM004','DM004', '2023-01-04 12:00:00', 0),
  ('TTDM005','DM005', '2023-01-05 12:00:00', 0),
  ('TTDM006','DM006', '2023-01-06 12:00:00', 0),
  ('TTDM007','DM007', '2023-01-07 12:00:00', 0),
  ('TTDM008','DM008', '2023-01-08 12:00:00', 0),
  ('TTDM009','DM009', '2023-01-09 12:00:00', 0),
  ('TTDM019','DM010', '2023-01-10 12:00:00', 0);

  

-- Dữ liệu cho bảng TAIKHOANKHACHHANG
INSERT INTO TAIKHOANKHACHHANG (TENTAIKHOAN, MATKHAU, MAKHACHHANG) VALUES
('vonhuthao', '123456', 'KH001'),
('vuongtran', '123456', 'KH002'),
('vinhhp', '123456', 'KH003'),
('thonthanh', '123456', 'KH004'),
('quynhle', '123456', 'KH005');



select * from KHACHHANG 
INNER JOIN TAIKHOANKHACHHANG ON KHACHHANG.MAKHACHHANG = TAIKHOANKHACHHANG.MAKHACHHANG
INNER JOIN PERSON ON KHACHHANG.MAPERSON = PERSON.MAPERSON
INNER JOIN DONMUA ON DONMUA.MAKHACHHANG = KHACHHANG.MAKHACHHANG
INNER JOIN CHITIETDONMUA ON CHITIETDONMUA.MADONMUA = DONMUA.MADONMUA
WHERE KHACHHANG.MAKHACHHANG = TAIKHOANKHACHHANG.MAKHACHHANG
-- Dữ liệu cho bảng NHANVIEN
INSERT INTO NHANVIEN (MANHANVIEN, MAPERSON, CHUCVU) VALUES
('NV001', 'PER006', 'Nhân viên bán hàng'),
('NV002', 'PER007', 'Quản lý kho'),
('NV003', 'PER008', 'Nhân viên kế toán'),
('NV004', 'PER009', 'Nhân viên giao hàng'),
('NV005', 'PER010', 'Quản lý cửa hàng');

-- Dữ liệu cho bảng TAIKHOANNHANVIEN
INSERT INTO TAIKHOANNHANVIEN (TENTAIKHOAN, MATKHAU, MANHANVIEN) VALUES
('nhanvien1', '123456', 'NV001'),
('nhanvien2', '123456', 'NV002'),
('nhanvien3', '123456', 'NV003'),
('nhanvien4', '123456', 'NV004'),
('nhanvien5', '123456', 'NV005');
-- Dữ liệu cho bảng CHITIETDONMUA


select * from donmua

INSERT INTO GIOHANG VALUES 
('GH01', 'KH001', 'SPDT001', 5 , null),
('GH02', 'KH002', 'SPDT008', 6 , null),
('GH03', 'KH003', 'SPDT002', 1 , null),
('GH04', 'KH004', 'SPDT004', 3 , null);
-- Dữ liệu cho bảng QUANGCAO
INSERT INTO QUANGCAO (MAQUANGCAO, TENQUANGCAO, HINHANH) VALUES
('QC001', 'Quảng Cáo 1', 'quangcao_1.jpg'),
('QC002', 'Quảng Cáo 2', 'quangcao_2');

---------------------------- TRIGGER -----------------------------
CREATE TRIGGER TRG_CAP_NHAT_SO_LUONG_CTSP ON CHITIETDONMUA
AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @SOLUONG INT
	SET @SOLUONG = (SELECT inserted.SOLUONG FROM inserted 
					INNER JOIN KHO_CHITIETSANPHAM ON KHO_CHITIETSANPHAM.MACHITIETSANPHAM = inserted.MACHITIETSANPHAM
					INNER JOIN DONMUA ON DONMUA.MADONMUA = inserted.MADONMUA
					INNER JOIN KHACHHANG ON KHACHHANG.MAKHACHHANG = DONMUA.MAKHACHHANG)
	IF EXISTS(SELECT * FROM inserted)
		BEGIN
			UPDATE KHO_CHITIETSANPHAM
			SET KHO_CHITIETSANPHAM.SOLUONG = KHO_CHITIETSANPHAM.SOLUONG - @SOLUONG
			FROM KHO_CHITIETSANPHAM
			INNER JOIN inserted ON inserted.MACHITIETSANPHAM = KHO_CHITIETSANPHAM.MACHITIETSANPHAM
			WHERE KHO_CHITIETSANPHAM.MACHITIETSANPHAM = inserted.MACHITIETSANPHAM
		END
	IF EXISTS (SELECT * FROM deleted)
		BEGIN
			UPDATE KHO_CHITIETSANPHAM
			SET KHO_CHITIETSANPHAM.SOLUONG = KHO_CHITIETSANPHAM.SOLUONG + @SOLUONG
			FROM KHO_CHITIETSANPHAM
			INNER JOIN inserted ON inserted.MACHITIETSANPHAM = KHO_CHITIETSANPHAM.MACHITIETSANPHAM
			WHERE KHO_CHITIETSANPHAM.MACHITIETSANPHAM = inserted.MACHITIETSANPHAM
		END
END

CREATE TRIGGER UPDATE_TONG_TIEN_THANH_TOAN_DON_MUA ON CHITIETDONMUA
AFTER INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @SOLUONG INT, @GIA FLOAT, @TONGTIEN FLOAT
	SET @SOLUONG = (SELECT SOLUONG from inserted)
	SET @GIA = (SELECT GIA FROM CHITIETSANPHAM INNER JOIN inserted ON inserted.MACHITIETSANPHAM = CHITIETSANPHAM.MACHITIETSANPHAM)
	SET @TONGTIEN = @GIA * @SOLUONG
	
	IF EXISTS (SELECT * FROM inserted)
		BEGIN
			UPDATE THANHTOANDONMUA
			SET TONGTIEN = TONGTIEN + @TONGTIEN
			FROM THANHTOANDONMUA
			INNER JOIN inserted ON THANHTOANDONMUA.MADONMUA = inserted.MADONMUA
		END
	IF EXISTS (SELECT * FROM deleted)
	BEGIN
		UPDATE THANHTOANDONMUA
		SET TONGTIEN = TONGTIEN - @TONGTIEN
		FROM THANHTOANDONMUA
		INNER JOIN inserted ON THANHTOANDONMUA.MADONMUA = inserted.MADONMUA
	END
END

	
CREATE TABLE CHITIETSANPHAM (
    ID INT IDENTITY(1,1) PRIMARY KEY,
    MACHITIETSANPHAM VARCHAR(10) NOT NULL UNIQUE,
    MALOAI VARCHAR(50) NOT NULL,
    TENSANPHAM NVARCHAR(MAX),
    GIA FLOAT,
    MAUSAC NVARCHAR(MAX),
    MOTASANPHAM NVARCHAR(MAX),
    HINHANH VARCHAR(MAX),
	MANCC VARCHAR(10)
);






UPDATE THANHTOANDONMUA
	SET TONGTIEN = CHITIETDONMUA.SOLUONG * CHITIETSANPHAM.GIA
	FROM THANHTOANDONMUA
	INNER JOIN CHITIETDONMUA ON THANHTOANDONMUA.MADONMUA = CHITIETDONMUA.MADONMUA
	INNER JOIN CHITIETSANPHAM ON CHITIETDONMUA.MACHITIETSANPHAM = CHITIETSANPHAM.MACHITIETSANPHAM
	SELECT * FROM THANHTOANDONMUA


INSERT INTO CHITIETDONMUA (MACHITIETDONMUA, MADONMUA, MACHITIETSANPHAM, SOLUONG, KIEMTRATHANHTOAN) VALUES
('CTDM008', 'DM003', 'SPDT030', 1, 0)
SELECT * FROM THANHTOANDONMUA


SELECT * FROM CHITIETSANPHAM
SELECT * FROM DONMUA
select * from KHO_CHITIETSANPHAM
SELECT * FROM CHITIETDONMUA
INSERT INTO CHITIETDONMUA (MACHITIETDONMUA, MADONMUA, MACHITIETSANPHAM, SOLUONG, KIEMTRATHANHTOAN) VALUES
('CTDM007', 'DM001', 'SPDT016', 10, 0)


SELECT CHITIETDONMUA.MACHITIETSANPHAM ,CHITIETDONMUA.SOLUONG FROM CHITIETDONMUA 
INNER JOIN  KHO_CHITIETSANPHAM ON KHO_CHITIETSANPHAM.MACHITIETSANPHAM = CHITIETDONMUA.MACHITIETSANPHAM
INNER JOIN DONMUA ON DONMUA.MADONMUA = CHITIETDONMUA.MADONMUA
INNER JOIN KHACHHANG ON KHACHHANG.MAKHACHHANG = DONMUA.MAKHACHHANG


WHERE KHACHHANG.MAKHACHHANG = 'KH001'
SELECT * FROM CHITIETDONMUA

SELECT * FROM THANHTOANDONMUA
SELECT * FROM GIOHANG
SELECT * FROM DONMUA

SELECT * FROM KHACHHANG
SELECT * FROM TAIKHOANKHACHHANG
SELECT * FROM TAIKHOANNHANVIEN
select * from DONMUA where MAKHACHHANG = 'KH01'

GO
CREATE PROC PROC_GET_DATA_CHI_TIET_DON_MUA 
			@MAKHACHHANG VARCHAR(10), @MADONMUA VARCHAR(10)
AS
BEGIN
	IF @MAKHACHHANG IS NULL
		RETURN -1
	IF @MADONMUA IS NULL
		RETURN -2
	IF @MAKHACHHANG <> (SELECT DISTINCT MAKHACHHANG FROM CHITIETDONMUA
						INNER JOIN DONMUA ON DONMUA.MADONMUA = CHITIETDONMUA.MADONMUA
						WHERE @MADONMUA = CHITIETDONMUA.MADONMUA)
		RETURN -3
	(SELECT TENSANPHAM, GIA, MAUSAC, HINHANH, SOLUONG FROM CHITIETDONMUA
		INNER JOIN DONMUA ON DONMUA.MAKHACHHANG = @MAKHACHHANG
		INNER JOIN CHITIETSANPHAM ON CHITIETSANPHAM.MACHITIETSANPHAM = CHITIETDONMUA.MACHITIETSANPHAM
		WHERE CHITIETDONMUA.MADONMUA = @MADONMUA AND DONMUA.MAKHACHHANG = @MAKHACHHANG)
END
GO
CREATE PROC PROC_GET_DATA_CHI_TIET_DON_MUA_DA_THANH_TOAN 
			@MAKHACHHANG VARCHAR(10), @MADONMUA VARCHAR(10)
AS
BEGIN
	IF @MAKHACHHANG IS NULL
		RETURN -1
	IF @MADONMUA IS NULL
		RETURN -2
	IF @MAKHACHHANG <> (SELECT DISTINCT MAKHACHHANG FROM CHITIETDONMUA
						INNER JOIN DONMUA ON DONMUA.MADONMUA = CHITIETDONMUA.MADONMUA
						WHERE @MADONMUA = CHITIETDONMUA.MADONMUA)
		RETURN -3
	(SELECT TENSANPHAM, GIA, MAUSAC, HINHANH, SOLUONG FROM CHITIETDONMUA
		INNER JOIN DONMUA ON DONMUA.MAKHACHHANG = @MAKHACHHANG
		INNER JOIN CHITIETSANPHAM ON CHITIETSANPHAM.MACHITIETSANPHAM = CHITIETDONMUA.MACHITIETSANPHAM
		WHERE CHITIETDONMUA.MADONMUA = @MADONMUA AND DONMUA.MAKHACHHANG = @MAKHACHHANG AND KIEMTRATHANHTOAN = 1)
END
GO
CREATE PROC PROC_GET_DATA_CHI_TIET_DON_MUA_CHUA_THANH_TOAN 
			@MAKHACHHANG VARCHAR(10), @MADONMUA VARCHAR(10)
AS
BEGIN
	IF @MAKHACHHANG IS NULL
		RETURN -1
	IF @MADONMUA IS NULL
		RETURN -2
	IF @MAKHACHHANG <> (SELECT DISTINCT MAKHACHHANG FROM CHITIETDONMUA
						INNER JOIN DONMUA ON DONMUA.MADONMUA = CHITIETDONMUA.MADONMUA
						WHERE @MADONMUA = CHITIETDONMUA.MADONMUA)
		RETURN -3
	(SELECT TENSANPHAM, GIA, MAUSAC, HINHANH, SOLUONG FROM CHITIETDONMUA
		INNER JOIN DONMUA ON DONMUA.MAKHACHHANG = @MAKHACHHANG
		INNER JOIN CHITIETSANPHAM ON CHITIETSANPHAM.MACHITIETSANPHAM = CHITIETDONMUA.MACHITIETSANPHAM
		WHERE CHITIETDONMUA.MADONMUA = @MADONMUA AND DONMUA.MAKHACHHANG = @MAKHACHHANG AND KIEMTRATHANHTOAN = 0)
END

GO
CREATE PROC PROC_GET_DATA_DON_MUA
			@MAKHACHHANG VARCHAR(10)
AS
BEGIN
	IF @MAKHACHHANG IS NULL
		RETURN -1
	SELECT MADONMUA FROM DONMUA WHERE @MAKHACHHANG = DONMUA.MAKHACHHANG
END


EXEC PROC_GET_DATA_DON_MUA 'KH001'

GO
DROP PROC PROC_GET_DATA_DON_MUA
SELECT * FROM DONMUA
SELECT * FROM CHITIETDONMUA
SELECT * FROM CHITIETSANPHAM
EXEC PROC_GET_DATA_CHI_TIET_DON_MUA 'KH002', 'DM002'
EXEC PROC_GET_DATA_CHI_TIET_DON_MUA_DA_THANH_TOAN 'KH001', 'DM001'
EXEC PROC_GET_DATA_CHI_TIET_DON_MUA_CHUA_THANH_TOAN 'KH002', 'DM002'
SELECT DISTINCT MAKHACHHANG FROM CHITIETDONMUA
						INNER JOIN DONMUA ON DONMUA.MADONMUA = CHITIETDONMUA.MADONMUA
						WHERE 'DM001' = CHITIETDONMUA.MADONMUA

SELECT * FROM THANHTOANDONMUA
SELECT * FROM DONMUA
select * from TAIKHOANKHACHHANG
SELECT * FROM CHITIETDONMUA

SELECT * FROM PERSON

SELECT MADONMUA FROM DONMUA WHERE MAKHACHHANG = 'KH005'

select * from GIOHANG
select * from CHITIETDONMUA
CREATE PROC USP_CheckLogin_Emp
@user VARCHAR(MAX), @Pass VARCHAR(255)
AS
BEGIN
	SELECT * FROM dbo.TAIKHOANNHANVIEN
	WHERE TENTAIKHOAN = @user AND MATKHAU = @Pass
	END
GO

EXEC USP_CheckLogin_Emp @user = nhanvien1, @Pass= 123456

select * from chitietdonmua
select * from thanhtoandonmua
CREATE PROC USP_CheckLogin_Cus
@user VARCHAR(MAX), @Pass VARCHAR(255)
AS
BEGIN
	SELECT * FROM dbo.TAIKHOANKHACHHANG
	WHERE TENTAIKHOAN = @user AND MATKHAU = @Pass
	END
GO

EXEC dbo.USP_CheckLogin_Cus @user = VoNhutHao, @Pass= 123456


SELECT * FROM CHITIETDONMUA

CREATE PROC USP_LoadCart 
@MaKH VARCHAR(10)
AS 
BEGIN
	SELECT GH.MAGIOHANG, CTSP.TENSANPHAM, CTSP.GIA, CTSP.MAUSAC, GH.SOLUONG, CTSP.MOTASANPHAM, CTSP.HINHANH, GH.THANHTIEN FROM GIOHANG AS GH, CHITIETSANPHAM AS CTSP 
	WHERE GH.MAKHACHHANG = @MaKH AND GH.MACHITIETSANPHAM = CTSP.MACHITIETSANPHAM
	END
GO

select * from KHACHHANG
select * from PERSON
select * from CHITIETDONMUA
select * from CHITIETSANPHAM
select * from GIOHANG